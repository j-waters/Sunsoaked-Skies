import b from"../generation/pathfinding.js";export class TaskManager{constructor(a){this.person=a,this._queue=[],this.finished=[]}addMoveTo(a){this._queue.push(new MoveTask(this,a))}clear(){this._queue.length=0}get queue(){return this._queue}get current(){return this._queue[0]}complete(a){this.queue.splice(this.queue.indexOf(a),1),this.finished.push(a),a.isComplete=!0}}export class Task{constructor(a){this.manager=a,this._progress=0,this.total=1,this.isComplete=!1}complete(){this.manager.complete(this)}get progress(){return this._progress/this.total}set progress(a){this._progress=a}get person(){return this.manager.person}}export class MoveTask extends Task{constructor(a,c){super(a);this.target=c}get currentTarget(){return this._route||(this._route=b(this.person,this.target),console.log("specific route: ",this._route.map(a=>a)),this.total=this._route.length),this._route[0]}completeStep(){const a=this.person.room;this.person.setRoom(this.currentTarget.room,this.currentTarget.position),this.person.room!=a&&a.onPersonLeave(),this.progress+=1,this._route.shift(),this._route.length||this.complete()}}
