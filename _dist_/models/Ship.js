import{generateGrid as n,generateHullGraphic as a,generateTopDownShipGraphic as c}from"../generation/generateShip.js";import{POSITIVE_ZERO as s}from"../sprites/map/MapShipSprite.js";import{MovementAction as l}from"./MapAction.js";var g=Phaser.Math.Vector2,f=Phaser.Scene,C=Phaser.Curves.Curve;export default class o{constructor(t){this.turningModifier=100,this.speed=.2,this.acceleration=.001,this.rootRoom=t,this.velocity=new g(0,-s),this.movementAction=new l()}get decelerationDistance(){return Math.pow(this.velocity.length(),2)/(2*this.acceleration)}generateTexture(t,e){if(t.textures.exists("ship_hull"))return t.textures.get("ship_hull");const r=a(this,e);return t.textures.addCanvas("ship_hull",r)}generateTopDownTexture(t){if(t.textures.exists("ship_top_down"))return t.textures.get("ship_top_down");const e=c(this);return t.textures.addCanvas("ship_top_down",e)}static builder(){return new p()}get roomGrid(){return n(this.rootRoom)}get people(){return this.rooms.flatMap(t=>t.people)}get rooms(){const t=[];return this.roomGrid.forEach((e,r)=>{e.forEach((i,h)=>{i&&!t.includes(i)&&(i.setGridPosition(h,r),t.push(i))})}),t}iterateMovement(){if(this.targetCurve){const t=this.targetCurve.getTFromDistance(this.distance),e=this.targetCurve.getPointAt(t);this.velocity.setAngle(this.targetCurve.getTangentAt(t).angle()),this.position=e,this.distance+=this.velocity.length(),this.accelerate(this.targetCurve.getLength()-this.distance<this.decelerationDistance),this.distance>=this.targetCurve.getLength()&&(this.targetCurve=null)}else this.accelerate(!0),this.velocity.length()>s&&this.position.add(this.velocity)}accelerate(t=!1){if(!t&&this.velocity.length()<this.speed)this.velocity.setLength(this.velocity.length()+this.acceleration);else if(t&&this.velocity.length()>.001){const e=this.velocity.length()-this.acceleration;e<s?this.velocity.setLength(s):this.velocity.setLength(e)}this.velocity.length()>this.speed&&this.velocity.setLength(this.speed)}get movementProgress(){return this.targetCurve?this.distance/this.targetCurve.getLength():0}get weapons(){return this.rooms.map(t=>"weapons"in t?t.weapons:[]).flat()}}class p{createRootRoom(t){return this.rootRoom=t,this.rootRoom}build(){const t=new o(this.rootRoom);return t.rootRoom.setShip(t),t}}
