var h=Phaser.Scene,f=Phaser.Math.Vector2;const d=.8,b=.95;export default class i extends Phaser.GameObjects.Image{constructor(a,c,e,g){super(a,e.x,e.y,c.getWeaponProjectileTexture(a));this.velocity=new f(c.speed,0).setAngle(g),this.size=3,this.setDisplaySize(this.size,this.size),this.distance=0,this.weapon=c}update(){this.setPosition(this.x+this.velocity.x,this.y+this.velocity.y),this.distance+=this.velocity.length();let a=this.distance/this.weapon.range;a>b&&(this.setAlpha((1-a)/(1-b)),this.setDisplaySize(this.size*(1-a)/(1-b),this.size*(1-a)/(1-b))),a>d&&this.velocity.setLength(this.velocity.length()-this.deceleration),a>=1&&this.destroy()}get deceleration(){return Math.pow(this.weapon.speed,2)/(2*this.weapon.range*(1-d))}}
