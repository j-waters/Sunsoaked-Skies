import d from"../../shaders/OutlinePipeline.js";var h=Phaser.Scene,e=Phaser.Display.Color;export default class b extends Phaser.GameObjects.Image{constructor(a,f){super(a,0,0,f.icon);this.location=f,this.parent=a;let c=a.mapSize/a.world.size;this.setDisplaySize(12*c,12*c),this.setPosition(this.location.position.x*c,this.location.position.y*c),this.setTint(Phaser.Display.Color.ValueToColor("rgb(186,96,71)").color),this.setNormalOutline(),this.setInteractive(),this.on(Phaser.Input.Events.POINTER_OVER,(i,j,k,l)=>{this.setHoverOutline()}),this.on(Phaser.Input.Events.POINTER_OUT,()=>{this.setNormalOutline()})}setNormalOutline(){this.setPipeline(b.OUTLINE_NORMAL),this.pipeline.setFloat2("uTextureSize",this.texture.getSourceImage().width,this.texture.getSourceImage().height)}setHoverOutline(){this.setPipeline(b.OUTLINE_HOVERED),this.pipeline.setFloat2("uTextureSize",this.texture.getSourceImage().width,this.texture.getSourceImage().height)}get icon(){return"map/ruin"}static setupPipelines(a){a.game.renderer instanceof Phaser.Renderer.WebGL.WebGLRenderer&&(a.game.renderer.addPipeline(this.OUTLINE_NORMAL,new d(a.game,e.ValueToColor("rgb(255, 255, 0)"),5)),a.game.renderer.addPipeline(this.OUTLINE_HOVERED,new d(a.game,e.ValueToColor("rgb(255,200,0)"),15)))}}b.OUTLINE_NORMAL="OUTLINE_NORMAL",b.OUTLINE_HOVERED="OUTLINE_HOVERED";
