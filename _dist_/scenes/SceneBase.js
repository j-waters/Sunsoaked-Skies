import{StateManager as i}from"../states/StateManager.js";import r from"../DataStore.js";var h=Phaser.Math.Vector2;console.log("");export class SceneBase extends Phaser.Scene{constructor(e){super(e);this.state=i.create()}get gameWidth(){return this.scale.width}get gameHeight(){return this.scale.height}setView(){this.cameras.main.centerOn(0,0)}get dataStore(){return r.create()}get Debug(){return this._debug||(this._debug=new n(this),this.add.existing(this._debug)),this._debug}update(e,t){super.update(e,t),this._debug?.update()}}class n extends Phaser.GameObjects.Graphics{constructor(e){super(e);this.lineStyle(1,16776960),this.texts=[]}update(){this.clear(),this.texts.forEach(e=>e.destroy()),this.texts=[]}addLine(e,t){this.lineBetween(e.x,e.y,t.x,t.y),this.stroke()}addAngle(e,t,s){const a=new h(100,0).setAngle(t).add(e);this.lineBetween(e.x,e.y,a.x,a.y),this.stroke(),s&&this.addText(a,t.toString())}addText(e,t){const s=new Phaser.GameObjects.Text(this.scene,e.x,e.y,t,{fontFamily:"Arial"});this.texts.push(s),this.scene.add.existing(s)}}
