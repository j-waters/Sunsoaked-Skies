import{StateManager as e}from"../states/StateManager.js";import f from"../DataStore.js";var g=Phaser.Math.Vector2;export class SceneBase extends Phaser.Scene{constructor(a){super(a);this.state=e.create()}get gameWidth(){return this.scale.width}get gameHeight(){return this.scale.height}setView(){this.cameras.main.centerOn(0,0)}get dataStore(){return f.create()}get Debug(){return this._debug||(this._debug=new h(this),this.add.existing(this._debug)),this._debug}update(a,b){super.update(a,b),this._debug?.update()}}class h extends Phaser.GameObjects.Graphics{constructor(a){super(a);this.lineStyle(1,16776960),this.texts=[]}update(){this.clear(),this.texts.forEach(a=>a.destroy()),this.texts=[]}addLine(a,b){this.lineBetween(a.x,a.y,b.x,b.y),this.stroke()}addAngle(a,b,c){let d=new g(100,0).setAngle(b).add(a);this.lineBetween(a.x,a.y,d.x,d.y),this.stroke(),c&&this.addText(d,b.toString())}addText(a,b){let c=new Phaser.GameObjects.Text(this.scene,a.x,a.y,b,{fontFamily:"Arial"});this.texts.push(c),this.scene.add.existing(c)}}
