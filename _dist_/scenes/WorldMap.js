import{SceneBase as x}from"./SceneBase.js";import p from"../sprites/map/MapLocationSprite.js";import y from"../sprites/map/MapShipSprite.js";var z=Phaser.Curves.QuadraticBezier,K=Phaser.Geom.Point,L=Phaser.Math.Vector2,A=Phaser.Curves.CubicBezier,M=Phaser.GameObjects.Graphics;import B from"../models/weapons/Weapon.js";var O=Phaser.Display.Color;import C from"../sprites/map/Cursor.js";import{MovementAction as q}from"../models/MapAction.js";import D from"../sprites/map/GraphicOverlay.js";import E from"../sprites/map/Projectile.js";export default class T extends x{constructor(){super(...arguments);this.mapSize=512*4}preload(){p.setupPipelines(this)}create(a){this.world=a.world,this.map=this.add.image(0,0,this.world.generateTexture(this,512)),this.map.setOrigin(0,0),this.map.setDisplaySize(this.mapSize,this.mapSize),this.map.texture.setFilter(Phaser.Textures.FilterMode.NEAREST),this.input.setDefaultCursor("url(assets/images/map/blank.svg), pointer"),this.world.locations.forEach(b=>{let c=new p(this,b);this.add.existing(c)}),this.playerShip=new y(this,this.dataStore.playerShip);let d=this.mapSize/this.world.size;this.playerShip.setDisplaySize(5*d,8*d),this.add.existing(this.playerShip),this.cursor=new C(this),this.selectedAction=this.dataStore.playerShip.movementAction,this.cursor.selectAction(this.selectedAction),this.add.existing(this.cursor),this.projectiles=this.add.group(),this.projectiles.runChildUpdate=!0,this.cameras.main.startFollow(this.playerShip),this.cameras.main.setZoom(7*(this.gameHeight/this.mapSize)),this.input.on(Phaser.Input.Events.POINTER_WHEEL,(b,c,g,e,s)=>{this.cameras.main.zoom+=-e*(this.gameHeight/this.mapSize)*.01,this.cameras.main.zoom>10*(this.gameHeight/this.mapSize)?this.cameras.main.zoom=10*(this.gameHeight/this.mapSize):this.cameras.main.zoom<1&&(this.cameras.main.zoom=1)}),this.overlay=new D(this),this.add.existing(this.overlay),this.input.on(Phaser.Input.Events.POINTER_DOWN,b=>this.pointerDown(b)),this.input.on(Phaser.Input.Events.POINTER_MOVE,(b,c)=>this.pointerMove(b,c)),this.events.on(Phaser.Scenes.Events.WAKE,()=>this.wake()),this.wake()}wake(){this.input.setDefaultCursor("url(assets/images/map/blank.svg), pointer")}pointerMove(a,d){let b=a.positionToCamera(this.cameras.main);this.cursor.setPosition(b.x,b.y),this.selectedAction instanceof q?this.handleMovementAction(a):(this.weaponRangeOverlay.setTo(this.playerShip),this.weaponTargetOverlay.setTo(this.playerShip,b))}handleMovementAction(a){let d=a.positionToCamera(this.cameras.main),b=r(this.playerShip.getCenter(),this.playerShip.ship.velocity.clone().setLength(this.playerShip.ship.turningModifier),d);this.overlay.drawProspectiveMovement(b),this.cursor.setRotation(b.getTangentAt(1).angle()-Math.PI/2)}pointerDown(a){let d=a.positionToCamera(this.cameras.main),b=r(this.playerShip.getCenter(),this.playerShip.ship.velocity.clone().setLength(this.playerShip.ship.turningModifier),d);this.selectedAction instanceof q?this.playerShip.moveTo(b):this.fire(this.weaponTargetOverlay.targetAngle)}fire(a){let d=new E(this,this.selectedAction,this.playerShip.getCenter(),a);this.projectiles.add(d,!0)}update(a,d){super.update(a,d),this.overlay.clear(),this.overlay.drawCurrentMovement(this.playerShip.ship),this.playerShip.update(),this.pointerMove(this.input.activePointer,[]),this.weaponRangeOverlay?.setTo(this.playerShip)}selectAction(a){this.weaponRangeOverlay?.destroy(),this.weaponTargetOverlay?.destroy(),a instanceof B&&(this.weaponRangeOverlay=a.getWeaponRangeOverlay(this),this.weaponTargetOverlay=a.getWeaponTargetOverlay(this),this.add.existing(this.weaponRangeOverlay),this.add.existing(this.weaponTargetOverlay)),this.selectedAction=a,this.cursor.selectAction(this.selectedAction),this.overlay.clear()}deselectAction(){this.weaponRangeOverlay?.destroy(),this.weaponTargetOverlay?.destroy(),this.selectedAction=this.dataStore.playerShip.movementAction,this.cursor.selectAction(this.selectedAction)}}function r(a,d,b,c){let g=a.clone().subtract(b);g.x=Math.abs(g.x),g.y=Math.abs(g.y);let e=Phaser.Math.Angle.Normalize(Phaser.Math.Angle.BetweenPoints(a,b)-d.angle()),s=Phaser.Math.Angle.Normalize(Math.PI/2-e),F=Phaser.Math.Distance.BetweenPoints(a,b)*Math.sin(s),j=a.clone().add(d.clone().setLength(F/2)),h=new z(a,j,b),t=h.getTangentAt(1),k=t.angle(),u=d.angle()-Math.PI*1.5,f=Phaser.Math.Angle.Normalize(k-u);e<Math.PI*1.5&&e>Math.PI?(f-=Math.PI*1.5-e,f<Math.PI/2&&(f=Math.PI/2)):e>Math.PI/2&&e<Math.PI&&(f+=e-Math.PI/2,f>Math.PI/2&&(f=Math.PI/2)),k=f+u;let i=d.clone();i.length()>b.clone().distance(a)/2&&i.setLength(b.clone().distance(a)/2);let G=i.clone().setAngle(k),l=a,m=a.clone().add(i),n=b.clone().subtract(G),o=b,v=new A(l,m,n,o);if(c){c.clear(),c.lineStyle(2,16711935,1),c.lineBetween(a.x,a.y,j.x,j.y),h.draw(c);let w=h.getEndPoint().add(t.setLength(40));c.lineStyle(1,16711680,1),c.lineBetween(h.getEndPoint().x,h.getEndPoint().y,w.x,w.y),c.lineStyle(1,65280,1),v.draw(c),c.lineStyle(1,255,1),c.lineBetween(l.x,l.y,m.x,m.y),c.lineBetween(n.x,n.y,o.x,o.y)}return v}
