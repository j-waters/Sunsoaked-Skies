import d from"../sprites/ship/RoomSprite.js";import f from"../generation/generationSettings.js";import e from"../sprites/ship/PersonSprite.js";import{SceneBase as g}from"./SceneBase.js";export default class m extends g{constructor(){super(...arguments);this.roomSprites=[],this.personSprites=[],this.selected=null}create(b){this.ship=b.ship,this.generationSettings=new f(2),this.background=this.add.image(this.gameWidth/2,this.gameHeight/2,this.ship.generateTexture(this,this.generationSettings)),this.ship.rooms.forEach(a=>{this.addRoom(a)}),this.ship.rooms.forEach(a=>{this.addPeople(a.people)}),this.input.on(Phaser.Input.Events.POINTER_DOWN,a=>{console.log("deselect"),this.deselect()}),this.input.setDefaultCursor("initial")}update(b,a){this.personSprites.forEach(c=>{c.update(b,a)})}addRoom(b){let a=new d(this,b,this.generationSettings),c=this.background.width/2,h=this.background.height/2;a.setPosition(b.gridPosition.x*this.generationSettings.roomSizeMargin-c+this.generationSettings.margin+this.gameWidth/2,b.gridPosition.y*this.generationSettings.roomSizeMargin-h+this.generationSettings.margin+this.gameHeight/2),a.setOrigin(0,0),this.roomSprites.push(a),this.add.existing(a),a.setupHover()}addPeople(b){b.forEach(a=>{let c=new e(this,a,this.generationSettings);this.personSprites.push(c),this.add.existing(c),c.moveToPosition()})}select(b){if(this.selected instanceof e&&b instanceof d){this.selected.toRoom(b);return}this.deselect(),this.selected=b,this.selected.select()}deselect(){this.selected&&(this.selected.deselect(),this.selected=null)}getRoomSprite(b){return this.roomSprites.find(a=>a.room==b)}}
