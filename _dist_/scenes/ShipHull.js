import i from"../sprites/ship/RoomSprite.js";import r from"../generation/generationSettings.js";import{SceneBase as h}from"./SceneBase.js";import n from"../sprites/ship/ShipPersonSprite.js";export default class a extends h{constructor(){super(...arguments);this.roomSprites=[],this.personSprites=[],this.selected=null}create(t){this.ship=t.ship,this.generationSettings=new r(2),this.background=this.add.image(this.gameWidth/2,this.gameHeight/2,this.ship.generateTexture(this,this.generationSettings)),this.ship.rooms.forEach(e=>{this.addRoom(e)}),this.ship.rooms.forEach(e=>{this.addPeople(e.people)}),this.input.on(Phaser.Input.Events.POINTER_DOWN,e=>{console.log("deselect"),this.deselect()}),this.events.on(Phaser.Scenes.Events.WAKE,()=>this.wake()),this.wake()}wake(){this.input.setDefaultCursor("initial")}update(t,e){this.personSprites.forEach(s=>{s.update(t,e)})}addRoom(t){const e=new i(this,t,this.generationSettings),s=this.background.width/2,o=this.background.height/2;e.setPosition(t.gridPosition.x*this.generationSettings.roomSizeMargin-s+this.generationSettings.margin+this.gameWidth/2,t.gridPosition.y*this.generationSettings.roomSizeMargin-o+this.generationSettings.margin+this.gameHeight/2),e.setOrigin(0,0),this.roomSprites.push(e),this.add.existing(e),e.setupHover()}addPeople(t){t.forEach(e=>{const s=new n(this,e,this.generationSettings);this.personSprites.push(s),this.add.existing(s),s.moveToPosition()})}select(t){if(this.selected instanceof n&&t instanceof i){this.selected.tasks.addMoveTo(t.room);return}this.deselect(),this.selected=t,this.selected.select()}deselect(){this.selected&&(this.selected.deselect(),this.selected=null)}getRoomSprite(t){return this.roomSprites.find(e=>e.room==t)}}
